name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    # The type of runner that the job will run on
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS]
        # Some packages don't compile nor have wheels available for 3.9.
        # In particular, llvmlite works from version 0.36.0,
        # but that forces you to upgrade numba to 0.53 which is incompatible.
        # Something similar happens with grpcio
        python-version: [3.8] #  , 3.9]
      fail-fast: false
    steps:
    #----------------------------------------------
    # check-out repo and set-up python
    #----------------------------------------------
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    #----------------------------------------------
    # install & configure poetry
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.2
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    #----------------------------------------------
    # load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    # install dependencies
    #----------------------------------------------
    - name: Install dependencies
      shell: bash
      run: make install

    #----------------------------------------------
    # run test suite
    #----------------------------------------------
    - name: Run pytest
      shell: bash
      run: make tests
